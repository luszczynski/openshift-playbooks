---

- hosts: all
  tasks:
      - name: Pulling logging images
        shell: docker pull {{ item }}
        with_items:
         - registry.access.redhat.com/openshift3/logging-auth-proxy:3.2.0
         - registry.access.redhat.com/openshift3/logging-elasticsearch:3.2.0
         - registry.access.redhat.com/openshift3/logging-fluentd:3.2.0
         - registry.access.redhat.com/openshift3/logging-kibana:3.2.0

- hosts: master
  tasks:
   - include_vars: vars.yaml

   - name: Checking if logging is already installed
     shell: oc get all --selector logging-infra=kibana
     register: logging_installed

   - name: Create project logging
     shell: oadm new-project logging --node-selector="" && oc project logging
     when: logging_installed.stdout == ''

   - name: Creating secrets
     shell: oc secrets new logging-deployer nothing=/dev/null
     when: logging_installed.stdout == ''

   - name: Creating service account
     shell: 'echo -e "apiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: logging-deployer\nsecrets:\n- name: logging-deployer" | oc create -f -'
     when: logging_installed.stdout == ''

   - name: Adjusting permissions
     shell: oc policy add-role-to-user edit --serviceaccount logging-deployer && oadm policy add-scc-to-user privileged system:serviceaccount:logging:aggregated-logging-fluentd && oadm policy add-cluster-role-to-user cluster-reader system:serviceaccount:logging:aggregated-logging-fluentd
     when: logging_installed.stdout == ''

   - name: Fetch master public url
     shell: grep masterPublicURL /etc/origin/master/master-config.yaml | head -1 | awk '{print $2}'
     register: master_public_url
     when: logging_installed.stdout == ''

   - name: Creating logging deployer
     shell: oc new-app logging-deployer-template --param KIBANA_HOSTNAME=kibana.{{subdomain}} --param ES_CLUSTER_SIZE=1 --param PUBLIC_MASTER_URL={{master_public_url.stdout}}
     when: logging_installed.stdout == ''

   - shell: oc get po | grep logging-deployer | awk '{print $3}'
     register: deployer_status
     until: deployer_status.stdout.find("Completed") > -1
     retries: 20
     delay: 30
     when: logging_installed.stdout == ''

   - name: Deploy logging template
     shell: oc new-app logging-support-template
     when: logging_installed.stdout == ''

   - name: Importing new tags
     shell: oc import-image "{{item}}:3.2.0" --from "registry.access.redhat.com/openshift3/{{item}}:3.2.0"
     when: logging_installed.stdout == ''
     with_items:
         - logging-auth-proxy
         - logging-kibana
         - logging-elasticsearch
         - logging-fluentd

   - name: Scale up fluentd
     shell: oc scale dc/logging-fluentd --replicas={{number_of_nodes}}
     when: logging_installed.stdout == ''

   - name: Editing master-config.yaml with logging url
     lineinfile: "dest=/etc/origin/master/master-config.yaml state=present backup=yes insertbefore='logout' line='  loggingPublicURL: https://kibana.{{subdomain}}'"
     when: logging_installed.stdout == ''
     notify:
       - Validate master-config

  handlers:
    - include: handlers/handlers.yaml
