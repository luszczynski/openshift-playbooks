---
- include_vars: ../vars.yml

# Installing

- name: Checking if router is already installed
  shell: oc get all -l router=router -n default
  register: router_installed

- name: Greping master info
  shell: oc get nodes | grep -i $(hostname) | awk '{print $1}'
  register: master_name
  when: router_installed.stdout == '' and uninstall is undefined

- name: Changing master to schedulable
  shell: oadm manage-node {{master_name.stdout}} --schedulable=true
  when: router_installed.stdout == '' and uninstall is undefined

- name: Grep master label
  shell: oc describe node {{master_name.stdout}} | grep Label | awk '{print $2}'
  register: master_label
  when: router_installed.stdout == '' and uninstall is undefined

- name: Install Router
  shell: oc project default && oadm router router --replicas=1  --credentials='/etc/origin/master/openshift-router.kubeconfig' --service-account=router --selector={{master_label.stdout}}
  failed_when: master_label.stdout == ''
  when: router_installed.stdout == '' and not expose_router_metrics and uninstall is undefined

- name: Install Router with metrics
  shell: oc project default && oadm router router --replicas=1  --credentials='/etc/origin/master/openshift-router.kubeconfig' --service-account=router --selector={{master_label.stdout}} --expose-metrics --metrics-image=prom/haproxy-exporter
  failed_when: master_label.stdout == ''
  when: router_installed.stdout == '' and expose_router_metrics and uninstall is undefined


  # Uninstalling
- name: Cleaning up router
  shell: oc delete all -l router=router -n default
  when: router_installed.stdout != "" and uninstall is not undefined
